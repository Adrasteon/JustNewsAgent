[Unit]
Description=JustNews Service (%i)
Wants=network-online.target
After=network-online.target

[Service]
Type=simple
# Global and per-instance environment files (optional but recommended)
EnvironmentFile=-/etc/justnews/global.env
EnvironmentFile=-/etc/justnews/%i.env
# Run as a dedicated, non-interactive system account for security and isolation.
# Recommended in production: create system user 'justnews' and group 'justnews'.
User=justnews
Group=justnews
# Create an ephemeral runtime directory under /run and persistent state under /var/lib
RuntimeDirectory=justnews
RuntimeDirectoryMode=0750
StateDirectory=justnews
#
# Security hardening defaults - adjust if an agent needs extra privileges
ProtectSystem=full
ProtectHome=read-only
PrivateTmp=yes
NoNewPrivileges=yes
# Use an absolute working directory (systemd requires absolute paths).
# For production and multi-user systems we map the project into /opt/justnews
# (a root-owned path) and make the project readable by the justnews group.
WorkingDirectory=/opt/justnews
# Start from WorkingDirectory so ExecStart/ExecStartPre may use relative
# paths (the installer creates /opt/justnews -> project root and ensures
# group permissions so the service user can traverse the path).
ExecStartPre=/bin/bash -c 'if [ "%i" = "mcp_bus" ]; then ./deploy/systemd/scripts/justnews-preflight-check.sh --gate-only; else [ "${REQUIRE_BUS:-1}" = "0" ] || [ "%i" = "gpu_orchestrator" ] || ./deploy/systemd/scripts/wait_for_mcp.sh; fi'
ExecStart=/bin/bash -c './deploy/systemd/scripts/justnews-start-agent.sh %i'
Restart=on-failure
RestartSec=3

[Install]
WantedBy=multi-user.target
