# .gitignore

# Python
__pycache__/
*.py[cod]
*$py.class
*.pyc
*.pyo
*.pyd
.Python

# Environments
# Keep .env ignored to avoid committing secrets; provide .env.example for reference.
.env
.venv
venv/
ENV/
env/
# allow tracking of sanitized example env

# Docker
docker-compose.override.yml

# Model Files (Large binary files - regenerate or download as needed)
*.bin
*.safetensors
*.pt
*.pth
*.onnx
*.engine
*.trt
*.plan
models/
model_cache/
transformers_cache/
huggingface_cache/
~/.cache/huggingface/

# TensorRT Engine Files (Binary artifacts - regenerate as needed)
agents/analyst/tensorrt_engines/*.engine
agents/analyst/tensorrt_engines/*.onnx
agents/analyst/tensorrt_engines/*.trt
agents/analyst/tensorrt_engines/*.plan
**/tensorrt_engines/*.engine
**/tensorrt_engines/*.onnx
**/tensorrt_engines/*.trt
**/tensorrt_engines/*.plan

# Log Files and Temporary Data
*.log
logs/
feedback_*.log
**/feedback_*.log
**/*.log
server.log
performance_*.log
mcp_bus.log
gpu_analyst.log
scout.log
newsreader_agent.log
orchestrator_demo_results/

# Test Results and Temporary Files
*_test_results.json
*_results.json
*_results_*.json
test_results/
production_test_results/
production_test_results_*/
large_scale_crawl_results/
temp/
tmp/
.tmp/
*.csv
*.png
*.txt
batch_*.json
production_*.json
ultra_fast_*.json

# Development and Debug Files
debug_*.py
common/dev_db_fallback.py
# Broad ignore of ad-hoc test scripts, but allow curated orchestrator tests
test_*.py
*_test.py
!test_gpu_orchestrator_endpoints.py
!test_analyst_gpu_gating.py
!test_gpu_orchestrator_client.py
!test_gpu_orchestrator_leasing.py
!test_gpu_orchestrator_nvml_flags.py
!test_gpu_orchestrator_lease_ttl.py
!test_memory_management.py
!test_metrics.py
!test_production_crawler_direct.py
!test_mini_e2e_runner_smoke.py
inspect_*.py
investigate_*.py
simple_*.py
crash_safe_*.py
single_article_*.py
deploy_*.py
start_*.py
diagnose_*.py
improved_*.py
isolated_*.py
balanced_*.py
ultra_safe_*.py

# Temporary ignores to bypass secret hook for throwaway/dev scripts
# TODO: sanitize and remove these ignores
agents/scout/production_crawlers/crawler_utils.py
scripts/mini_e2e_runner.py
start_services_daemon.sh

# CUDA debug and reset tools
debug_cuda_resources.py
gpu_reset_tool.py

# Process Management
*.pid
nohup.out

# Native Service Background Processes  
start_services_daemon.sh.log
stop_services.sh.log

# Pipeline Test Files (Generated)
test_full_pipeline*.py
test_scout_memory*.py
test_*_pipeline*.py

# Performance and Optimization Reports (Generated)
*optimization*.json
*performance*.json
*benchmark*.json
*memory*.json
*stress_test*.json

# IDE and Editor Files
.vscode/
.idea/
*.swp
*.swo
*~

# Editor workspace state (avoid committing)
workspaceState.state.json

# OS Files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Large datasets and downloaded content
datasets/
data/
downloads/
crawled_data/
crawl4ai_docs/
archive_storage/

# Archive folder for obsolete files
archive_obsolete_files/*
!archive_obsolete_files/development_session_aug_2/

# Ignore archived backups created by maintenance
archive_obsolete_files/backup_*/

# Documentation Organization (Only essential .md files in root)
# All other .md files should be in markdown_docs/ subdirectories
# Keep only: README.md, CHANGELOG.md in root
/*.md
!/README.md
!/CHANGELOG.md

# Encrypted Secrets Vault (contains sensitive data)
~/.justnews/secrets.vault

# Secret Management Scripts (keep executable)
!/scripts/manage_secrets.sh
!/scripts/manage_secrets.py

# Development Scripts and Tools
*.sh
nucleoid_service.py
*_command_ref.md
crawl4ai_best_practice.py
deep_content_analysis.py
*_intelligence_test.py

# Allow committing the TensorRT stub test used for CI checks
!tests/test_tensorrt_stub.py

# Allowlist production deployment scripts (systemd)
!deploy/systemd/*.sh
!deploy/systemd/scripts/*.sh
!deploy/systemd/helpers/*.sh

# Database Files and Vector Stores
*.db
*_vectordb/
memory_v2.db
memory_v2_vectordb/
memory_v2_vectordb/

# Knowledge Graph Storage (Generated data files)
kg_storage/
evidence/

# Screenshots and Test Images
bbc_screenshots/
test_screenshots/
page_*.png
screenshot_*.png

# Conda Environment Files (keep local only)
environment-*.yml

agents/reasoning/nucleoid_repo/

# Cache directories
.cache/

# HuggingFace/Xet model cache artifacts (accidentally committed previously)
# Expanded model/cache ignore rules (prevent accidental large cache commits)
# Prior placeholder "$MODEL_CACHE_DIR/" removed (not effective in gitignore)
# Common HuggingFace cache directories & chunk cache shards
**/huggingface/cache/**
**/huggingface/hub/**
**/huggingface/xet/**
**/chunk-cache/**
**/models--*/snapshots/**
**/models--*/refs/**
**/models--*/blobs/**

# Generic deep nested binary shard patterns (NN/NN style) under cache trees
**/cache/*/*/*/*/*.json
**/cache/*/*/*/*/*.lock

# Safety: keep source code if any directory legitimately named huggingface contains .py files
!**/huggingface/**/*.py


#Ignore vscode AI rules
.github/instructions/codacy.instructions.md
